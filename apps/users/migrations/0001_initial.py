# Generated by Django 3.1.8 on 2021-05-13 05:35

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import unixtimestampfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.EmailField(max_length=254, unique=True, verbose_name='Логин')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Фамилия')),
                ('user_type', models.CharField(choices=[('user_type', 'User'), ('teacher_type', 'Teacher')], max_length=20, verbose_name='Тип пользователя')),
                ('birth_date', unixtimestampfield.fields.UnixTimeStampField()),
                ('students_start_age', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)])),
                ('students_end_age', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', unixtimestampfield.fields.UnixTimeStampField(auto_now_add=True)),
                ('length', models.IntegerField(verbose_name='Длительность в днях')),
                ('paid_amount', models.IntegerField(verbose_name='Сумма оплаты')),
                ('paid', models.BooleanField(default=False, verbose_name='Оплачено')),
                ('finished', models.BooleanField(default=False, verbose_name='Завершена')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_subscription', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', unixtimestampfield.fields.UnixTimeStampField(verbose_name='Время оплаты')),
                ('amount', models.FloatField(verbose_name='Сумма оплаты')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_payment', to=settings.AUTH_USER_MODEL, verbose_name='Оплативший пользователь')),
            ],
            options={
                'verbose_name': 'Пополнение',
                'verbose_name_plural': 'Пополнения',
            },
        ),
    ]
